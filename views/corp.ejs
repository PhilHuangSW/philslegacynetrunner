<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= identity[0].title %></title>

  <!-- BOOTSTRAP v5 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">

  <!-- CUSTOM CSS -->
  <link rel="stylesheet" href="/stylesheets/home.css">

  <!-- GOOGLE FONTS ROBOTO FONT -->
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100;400&display=swap" rel="stylesheet">
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Orbitron&display=swap" rel="stylesheet">

  <!-- FONT AWESOME -->
  <link rel="stylesheet" href="/stylesheets/all.css">

  <link rel="stylesheet" href="/stylesheets/corp.css">

  <!-- DETERMINES WHICH CARD IS SHOWN DEPENDING ON LAST HOVER OVER -->
  <script>
    window.onload = function() {
      const allImgs = <%- JSON.stringify(allImages) %>;
      for (let i = 0; i < allImgs.length; i++) {
        $('.' + i).hover(() => {
          for (let j = 0; j < allImgs.length; j++) {
            // console.log(j)
            $('.img' + j).addClass('d-none');
          }
          // console.log(i);
          $('.img' + i).removeClass('d-none');
        })
      };
    }
  </script>

</head>


<body class="body bodyFade overflow-auto">
  <%- include('./partials/navbar') %>
  <main class="container pt-5" id="mainView">
    <h1 class="text-white text-center pt-3">
      <%= deck_name %>
    </h1>

    <div class="row mb-3">

      <div class="col-sm-6">
        <!-- IDENTITY -->
        <h3 class="text-white pt-2">Identity:</h3>
        <div class="text-white">
          <a class="<%= identity[0].id %> iosModal" data-bs-toggle="modal" data-bs-target="#cardModal"
            data-bs-whatever="<%= identity[0].id %>id0"><span
              id="<%= identity[0].id %>"><%= identity[0].title %></span></a>
        </div>


        <!-- AGENDAS -->
        <% if (agenda.length != 0) { %>
        <h3 class="text-white pt-2">Agendas: [<%= totalCardDistribution.agenda %>] </h3>
        <% for( let i = 0; i < agenda.length; i++ ) { %>
        <div class="text-white">
          <%= agenda[i].amount %>x
          <a class="<%= agenda[i].id %> iosModal" data-bs-toggle="modal" data-bs-target="#cardModal"
            data-bs-whatever="<%= agenda[i].id %>ag<%= i %>"><span
              id="<%= agenda[i].id %>"><%= agenda[i].title %></span></a>
        </div>
        <% } %>
        <% } %>


        <!-- ASSETS -->
        <% if (asset.length != 0) { %>
        <h3 class="text-white pt-2">Assets: [<%= totalCardDistribution.asset %>]</h3>
        <% for( let i = 0; i < asset.length; i++ ) { %>
        <div class="text-white">
          <%= asset[i].amount %>x
          <a class="<%= asset[i].id %> iosModal" data-bs-toggle="modal" data-bs-target="#cardModal"
            data-bs-whatever="<%= asset[i].id %>a<%= i %>"><span
              id="<%= asset[i].id %>"><%= asset[i].title %></span></a>
        </div>
        <% } %>
        <% } %>



        <!-- OPERATIONS -->
        <% if (operation.length != 0) { %>
        <h3 class="text-white pt-2">Operations: [<%= totalCardDistribution.operation %>]</h3>
        <% for( let i = 0; i < operation.length; i++ ) { %>
        <div class="text-white">
          <%= operation[i].amount %>x
          <a class="<%= operation[i].id %> iosModal" data-bs-toggle="modal" data-bs-target="#cardModal"
            data-bs-whatever="<%= operation[i].id %>o<%= i %>"><span
              id="<%= operation[i].id %>"><%= operation[i].title %></span></a>
        </div>
        <% } %>
        <% } %>
      </div>


      <div class="col-sm-6">
        <!-- UPGRADES -->
        <% if (upgrade.length != 0) { %>
        <h3 class="text-white pt-2">Upgrades: [<%= totalCardDistribution.upgrade %>]</h3>
        <% for( let i = 0; i < upgrade.length; i++ ) { %>
        <div class="text-white">
          <%= upgrade[i].amount %>x
          <a class="<%= upgrade[i].id %> iosModal" data-bs-toggle="modal" data-bs-target="#cardModal"
            data-bs-whatever="<%= upgrade[i].id %>u<%= i %>"><span
              id="<%= upgrade[i].id %>"><%= upgrade[i].title %></span></a>
        </div>
        <% } %>
        <% } %>


        <!-- BARRIER -->
        <% if (barrier.length != 0) { %>
        <h3 class="text-white pt-2">Barrier: [<%= totalCardDistribution.barrier %>]</h3>
        <% for( let i = 0; i < barrier.length; i++ ) { %>
        <div class="text-white">
          <%= barrier[i].amount %>x
          <a class="<%= barrier[i].id %> iosModal" data-bs-toggle="modal" data-bs-target="#cardModal"
            data-bs-whatever="<%= barrier[i].id %>ib<%= i %>"><span
              id="<%= barrier[i].id %>"><%= barrier[i].title %></span></a>
        </div>
        <% } %>
        <% } %>


        <!-- CODE GATE -->
        <% if (codegate.length != 0) { %>
        <h3 class="text-white pt-2">Code Gate: [<%= totalCardDistribution.codegate %>]</h3>
        <% for( let i = 0; i < codegate.length; i++ ) { %>
        <div class="text-white">
          <%= codegate[i].amount %>x
          <a class="<%= codegate[i].id %> iosModal" data-bs-toggle="modal" data-bs-target="#cardModal"
            data-bs-whatever="<%= codegate[i].id %>ic<%= i %>"><span
              id="<%= codegate[i].id %>"><%= codegate[i].title %></span></a>
        </div>
        <% } %>
        <% } %>


        <!-- SENTRY -->
        <% if (sentry.length != 0) { %>
        <h3 class="text-white pt-2">Sentry: [<%= totalCardDistribution.sentry %>]</h3>
        <% for( let i = 0; i < sentry.length; i++ ) { %>
        <div class="text-white">
          <%= sentry[i].amount %>x
          <a class="<%= sentry[i].id %> iosModal" data-bs-toggle="modal" data-bs-target="#cardModal"
            data-bs-whatever="<%= sentry[i].id %>is<%= i %>"><span
              id="<%= sentry[i].id %>"><%= sentry[i].title %></span></a>
        </div>
        <% } %>
        <% } %>


        <!-- OTHER -->
        <% if (other.length != 0) { %>
        <h3 class="text-white pt-2">Other: [<%= totalCardDistribution.other %>]</h3>
        <% for( let i = 0; i < other.length; i++ ) { %>
        <div class="text-white">
          <%= other[i].amount %>x
          <a class="<%= other[i].id %> iosModal" data-bs-toggle="modal" data-bs-target="#cardModal"
            data-bs-whatever="<%= other[i].id %>io<%= i %>"><span
              id="<%= other[i].id %>"><%= other[i].title %></span></a>
        </div>
        <% } %>
        <% } %>


      </div>

      <!-- 55 Closing Row Div -->
    </div>


    <!-- LOADS ALL IMAGES HERE, A SCRIPT RUNS AFTERWARD TO DETERMINE WHICH CARD IS SHOWN -->
    <div class="row mb-3 pb-5">
      <div class="col-sm-6 col-lg-4 d-none d-sm-block">
        <img src="<%= allImages[identity[0].id] %> " alt="" class="img-fluid img<%= identity[0].id %>"
          id="img<%= identity[0].id %>">
        <% for( let i = 0; i < allImages.length; i++ ) { %>
        <% if (i === parseInt(identity[0].id)) { %>
        <% continue; %>
        <% } %>
        <img src="<%= allImages[i] %> " alt="" class="img-fluid d-none img<%= i %>" id="img<%= i %>">
        <% } %>
      </div>

      <div class="col-sm-6 col-lg-8 text-white" id="deckDescription">

      </div>

    </div>

  </main>






  <!-- BOOTSTRAP v5 -->
  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4" crossorigin="anonymous">
  </script>

  <!-- JQUERY -->
  <script
    src="https://code.jquery.com/jquery-3.6.0.js"
    integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk="
    crossorigin="anonymous">
  </script>

  <script src="/javascripts/prompts.js"></script>

  <!-- LOADS EACH CORP'S GUIDE -->
  <script>
    $("#deckDescription").load("/deck_list_helper/<%= corp %>.html");

    const x = window.matchMedia("(max-width: 900px), (max-height: 900px), (display-mode: fullscreen)");
    function myFunc(x) {
      if (x.matches) {
        $('#mainView').removeClass('vh-100');
      } else {
        $('#mainView').addClass('vh-100');
      }
    };
    myFunc(x);
    x.addListener(myFunc);
  </script>

  <!-- FONT AWESOME -->
  <script defer src="/javascripts/all.js"></script>

  <!-- CARD PAGE MODAL -->
  <div class="modal fade" id="cardModal" tabindex="-1" role="dialog" aria-labelledby="cardModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content bg-dark text-white">
        <div class="modal-header">
          <h3 class="modal-title"></h3>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
            aria-hidden="true"></button>
        </div>

        <div class="modal-body">
          <div class="row">
            <div class="col-sm-6 col-lg-5">
              <img class="img-fluid text-center" src="https://netrunnerdb.com/card_image/large/04109.jpg"
                alt="Card Missing Placeholder" id="modalImg">
            </div>

            <div class="col-sm-6 col-lg-7">
              <div class="card-info">
                <strong><span class="card-type"></span></strong>
                <span class="card-keywords"></span> â€¢
                <span class="card-prop"></span>
              </div>

              <p class="card-text border-top" style="white-space: pre-line">

              </p>
            </div>
          </div>
        </div>

        <div class="modal-footer">
          <a class="btn btn-default card-modal-link text-white" target="_blank">NRDB Page</a>
          <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    const allImgs = <%- JSON.stringify(allImages) %>;
    const identity = <%- JSON.stringify(identity) %>;
    const agenda = <%- JSON.stringify(agenda) %>;
    const asset = <%- JSON.stringify(asset) %>;
    const operation = <%- JSON.stringify(operation) %>;
    const upgrade = <%- JSON.stringify(upgrade) %>;
    const barrier = <%- JSON.stringify(barrier) %>;
    const codegate = <%- JSON.stringify(codegate) %>;
    const sentry = <%- JSON.stringify(sentry) %>;
    const other = <%- JSON.stringify(other) %>;
    const cardModal = document.getElementById('cardModal');
    // console.log(identity)
    // console.log(agenda)
    // console.log(asset)
    // console.log(operation)
    // console.log(upgrade)
    // console.log(barrier)
    // console.log(codegate)
    // console.log(sentry)
    // console.log(other)
    cardModal.addEventListener('show.bs.modal', function (e) {
      // Button that triggered the modal
      const button = e.relatedTarget;
      // Extract info from data-bs-* attributes
      let cardCodeRegex = button.getAttribute('data-bs-whatever');
      const card_id = cardCodeRegex.match(/(\d+)(?=\w)/)[0];
      let newCardCodeRegex = cardCodeRegex.slice(card_id.length);
      // console.log(card_id);
      const card_type = newCardCodeRegex.match(/[a-z]+/)[0];
      // console.log(card_type);
      const card_array_index = newCardCodeRegex.slice(card_type.length);
      // console.log(card_array_index);
      // If necessary, you could initiate an AJAX request here
      // and then do the updating in a callback.
      //
      // Update the modal's content.
      var modalTitle = cardModal.querySelector('.modal-title');
      var modalBodyInput = cardModal.querySelector('.modal-body card-info');
      var modalImage = cardModal.querySelector('#modalImg');
      var cardType = cardModal.querySelector('.card-type');
      var cardKeywords = cardModal.querySelector('.card-keywords');
      var cardProp = cardModal.querySelector('.card-prop');
      var cardText = cardModal.querySelector('.card-text');
      var cardModalLink = cardModal.querySelector('.card-modal-link');

      // console.log(event)
      // console.log(hardware)
      // console.log(program)
      // console.log(icebreaker)
      // console.log(resource)

      switch (card_type) {
        case 'ag':
          var { title, type_code, keywords, advancement_cost, agenda_points, full_text, card_code } = agenda[card_array_index];
          modalTitle.textContent = title;
          modalImage.src = allImgs[card_id];
          cardType.textContent = type_code.toUpperCase() + ': ';
          cardKeywords.textContent = keywords;
          cardProp.textContent = advancement_cost + '/' + agenda_points;
          cardText.innerHTML = full_text;
          cardModalLink.href = 'https://netrunnerdb.com/en/card/' + card_code;
          break;
        case 'a':
          var { title, type_code, keywords, cost, full_text, card_code, trash_cost } = asset[card_array_index];
          modalTitle.textContent = title;
          modalImage.src = allImgs[card_id];
          cardType.textContent = type_code.toUpperCase() + ': ';
          cardKeywords.textContent = keywords;
          cardProp.textContent = cost + 'Credits - ' + trash_cost + 'Credits to Trash';
          cardText.innerHTML = full_text;
          cardModalLink.href = 'https://netrunnerdb.com/en/card/' + card_code;
          break;
        case 'o':
          var { title, type_code, keywords, cost, trash_cost, full_text, card_code } = operation[card_array_index];
          modalTitle.textContent = title;
          modalImage.src = allImgs[card_id];
          cardType.textContent = type_code.toUpperCase() + ': ';
          cardKeywords.textContent = keywords;
          if (trash_cost) {
            cardProp.textContent = cost + 'Credits - ' + trash_cost + 'Credits to Trash';
          } else {
            cardProp.textContent = cost + 'Credits';
          }
          cardText.innerHTML = full_text;
          cardModalLink.href = 'https://netrunnerdb.com/en/card/' + card_code;
          break;
        case 'u':
          var { title, type_code, keywords, cost, trash_cost, full_text, card_code } = upgrade[card_array_index];
          modalTitle.textContent = title;
          modalImage.src = allImgs[card_id];
          cardType.textContent = type_code.toUpperCase() + ': ';
          cardKeywords.textContent = keywords;
          cardProp.textContent = cost + 'Credits - ' + trash_cost + 'Credits to Trash';
          cardText.innerHTML = full_text;
          cardModalLink.href = 'https://netrunnerdb.com/en/card/' + card_code;
          break;
        case 'ib':
          var { title, type_code, keywords, cost, full_text, card_code, trash_cost } = barrier[card_array_index];
          modalTitle.textContent = title;
          modalImage.src = allImgs[card_id];
          cardType.textContent = type_code.toUpperCase() + ': ';
          cardKeywords.textContent = keywords;
          if (trash_cost) {
            cardProp.textContent = cost + 'Credits - ' + trash_cost + 'Credits to Trash';
          } else {
            cardProp.textContent = cost + 'Credits';
          }
          cardText.innerHTML = full_text;
          cardModalLink.href = 'https://netrunnerdb.com/en/card/' + card_code;
          break;
        case 'ic':
          var { title, type_code, keywords, cost, full_text, card_code, trash_cost } = codegate[card_array_index];
          modalTitle.textContent = title;
          modalImage.src = allImgs[card_id];
          cardType.textContent = type_code.toUpperCase() + ': ';
          cardKeywords.textContent = keywords;
          if (trash_cost) {
            cardProp.textContent = cost + 'Credits - ' + trash_cost + 'Credits to Trash';
          } else {
            cardProp.textContent = cost + 'Credits';
          }
          cardText.innerHTML = full_text;
          cardModalLink.href = 'https://netrunnerdb.com/en/card/' + card_code;
          break;
        case 'is':
          var { title, type_code, keywords, cost, full_text, card_code, trash_cost } = sentry[card_array_index];
          modalTitle.textContent = title;
          modalImage.src = allImgs[card_id];
          cardType.textContent = type_code.toUpperCase() + ': ';
          cardKeywords.textContent = keywords;
          if (trash_cost) {
            cardProp.textContent = cost + 'Credits - ' + trash_cost + 'Credits to Trash';
          } else {
            cardProp.textContent = cost + 'Credits';
          }
          cardText.innerHTML = full_text;
          cardModalLink.href = 'https://netrunnerdb.com/en/card/' + card_code;
          break;
        case 'io':
          var { title, type_code, keywords, cost, full_text, card_code, trash_cost } = other[card_array_index];
          modalTitle.textContent = title;
          modalImage.src = allImgs[card_id];
          cardType.textContent = type_code.toUpperCase() + ': ';
          cardKeywords.textContent = keywords;
          if (trash_cost) {
            cardProp.textContent = cost + 'Credits - ' + trash_cost + 'Credits to Trash';
          } else {
            cardProp.textContent = cost + 'Credits';
          }
          cardText.innerHTML = full_text;
          cardModalLink.href = 'https://netrunnerdb.com/en/card/' + card_code;
          break;
        default:
          var { title, type_code, keywords, full_text, card_code, minimum_deck_size, influence_limit } = identity[0];
          modalTitle.textContent = title;
          modalImage.src = allImgs[card_id];
          cardType.textContent = type_code.toUpperCase() + ': ';
          cardKeywords.textContent = keywords;
          cardProp.textContent = minimum_deck_size + '/' + influence_limit;
          cardText.innerHTML = full_text;
          cardModalLink.href = 'https://netrunnerdb.com/en/card/' + card_code;
          break;
      }
      // modalTitle.textContent = identity[0].title
      // modalBodyInput.value = recipient
    });
  </script>

</body>

</html>